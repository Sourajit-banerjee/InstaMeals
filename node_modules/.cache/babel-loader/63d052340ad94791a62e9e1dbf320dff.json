{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sourajit bnanerjee\\\\01-starting-project_meal\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-contetx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item); //* we use concat instead of push because concat creats a new arr and den adss ,while push adds it to the prev/porginal arr\n    //* we always want our arrays in state to be immutable as we dont want to update react state array directly with the kmnwoledge of react\n\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updateItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updateItems = [...state.items];\n      updateItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updateItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCarAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCarAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCarAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"8veiWIPYIsIOqKdTPvnxyN0WtAY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updateTotalAmount","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updateItems","updatedItem","CartProvider","props","cartState","dispatchCarAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/sourajit bnanerjee/01-starting-project_meal/src/Store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-contetx\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedItems = state.items.concat(action.item);\r\n    //* we use concat instead of push because concat creats a new arr and den adss ,while push adds it to the prev/porginal arr\r\n    //* we always want our arrays in state to be immutable as we dont want to update react state array directly with the kmnwoledge of react\r\n    const updateTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    let updateItems;\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updateItems = [...state.items];\r\n      updateItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updateItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updateTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCarAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCarAction({\r\n      type: \"ADD\",\r\n      item: item,\r\n    });\r\n  };\r\n\r\n  const removeItemToCartHandler = (id) => {\r\n    dispatchCarAction({\r\n      type: \"REMOVE\",\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemToCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB,CADyB,CAEzB;IACA;;IACA,MAAMC,iBAAiB,GACrBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;IAGA,MAAMC,qBAAqB,GAAGT,KAAK,CAACH,KAAN,CAAYa,SAAZ,CAC3BL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYV,MAAM,CAACI,IAAP,CAAYM,EADN,CAA9B;IAGA,MAAMC,gBAAgB,GAAGZ,KAAK,CAACH,KAAN,CAAYY,qBAAZ,CAAzB;IAEA,IAAII,WAAJ;;IACA,IAAID,gBAAJ,EAAsB;MACpB,MAAME,WAAW,GAAG,EAClB,GAAGF,gBADe;QAElBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BP,MAAM,CAACI,IAAP,CAAYG;MAF5B,CAApB;MAIAK,WAAW,GAAG,CAAC,GAAGb,KAAK,CAACH,KAAV,CAAd;MACAgB,WAAW,CAACJ,qBAAD,CAAX,GAAqCK,WAArC;IACD,CAPD,MAOO;MACLD,WAAW,GAAGb,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAd;IACD;;IAED,OAAO;MACLR,KAAK,EAAEM,YADF;MAELL,WAAW,EAAEQ;IAFR,CAAP;EAID;;EACD,OAAOV,gBAAP;AACD,CA/BD;;AAiCA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCxB,UAAU,CAC/CK,WAD+C,EAE/CH,gBAF+C,CAAjD;;EAKA,MAAMuB,oBAAoB,GAAId,IAAD,IAAU;IACrCa,iBAAiB,CAAC;MAChBhB,IAAI,EAAE,KADU;MAEhBG,IAAI,EAAEA;IAFU,CAAD,CAAjB;EAID,CALD;;EAOA,MAAMe,uBAAuB,GAAIT,EAAD,IAAQ;IACtCO,iBAAiB,CAAC;MAChBhB,IAAI,EAAE,QADU;MAEhBS,EAAE,EAAEA;IAFY,CAAD,CAAjB;EAID,CALD;;EAOA,MAAMU,WAAW,GAAG;IAClBxB,KAAK,EAAEoB,SAAS,CAACpB,KADC;IAElBC,WAAW,EAAEmB,SAAS,CAACnB,WAFL;IAGlBwB,OAAO,EAAEH,oBAHS;IAIlBI,UAAU,EAAEH;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACGL,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAhCD;;GAAMT,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}