{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sourajit bnanerjee\\\\maxmillan\\\\01-starting-project_meal\\\\src\\\\components\\\\cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = val => {\n  return val.trim() === \"\";\n};\n\nconst isFiveChars = val => {\n  return val.trim() === 5;\n};\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = e => {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    console.log(enteredName);\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enterNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode) && !isEmpty(enteredPostalCode);\n    const formIsValid = enterNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n    setFormInputsValidity({\n      name: enterNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameControlClasses = `$`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter a Valid Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: streetInputRef,\n        type: \"text\",\n        id: \"street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: postalCodeInputRef,\n        type: \"text\",\n        id: \"postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: cityInputRef,\n        type: \"text\",\n        id: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"J6RPoKCLPrFTijyxl98sgLIvGUg=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useRef","useState","classes","isEmpty","val","trim","isFiveChars","Checkout","props","formInputValidity","setFormInputsValidity","name","street","postalCode","city","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","e","preventDefault","enteredName","current","value","console","log","enteredStreet","enteredPostalCode","enteredCity","enterNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","nameControlClasses","form","control","actions","onCancel","submit"],"sources":["C:/Users/sourajit bnanerjee/maxmillan/01-starting-project_meal/src/components/cart/Checkout.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (val) => {\r\n  return val.trim() === \"\";\r\n};\r\n\r\nconst isFiveChars = (val) => {\r\n  return val.trim() === 5;\r\n};\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    console.log(enteredName);\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enterNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid =\r\n      isFiveChars(enteredPostalCode) && !isEmpty(enteredPostalCode);\r\n    const formIsValid =\r\n      enterNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    setFormInputsValidity({\r\n      name: enterNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n  };\r\n  const nameControlClasses=`$`\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input ref={nameInputRef} type=\"text\" id=\"name\" />\r\n        {!formInputValidity.name && <h2>Enter a Valid Name!</h2>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input ref={streetInputRef} type=\"text\" id=\"street\" />\r\n        {!formInputValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input ref={postalCodeInputRef} type=\"text\" id=\"postal\" />\r\n        {!formInputValidity.postalCode && (\r\n          <p>Please enter a valid postal code (5 characters long)!</p>\r\n        )}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input ref={cityInputRef} type=\"text\" id=\"city\" />\r\n        {!formInputValidity.city && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}