{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sourajit bnanerjee\\\\01-starting-project_meal\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-contetx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item); //* we use concat instead of push because concat creats a new arr and den adss ,while push adds it to the prev/porginal arr\n    //* we always want our arerays in state to be immutable as we dont want to update react state array directly with the kmnwoledge of react\n\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCarAction] = useReducer(cartdefaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCarAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCarAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"D+2i82yncpW0iU1xtdU04C9+Oiw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updateTotalAmount","price","amount","CartProvider","props","cartState","dispatchCarAction","cartdefaultCartState","addItemToCartHandler","removeItemToCartHandler","id","cartContext","addItem","removeItem","children"],"sources":["C:/Users/sourajit bnanerjee/01-starting-project_meal/src/Store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-contetx\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedItems = state.items.concat(action.item);\r\n    //* we use concat instead of push because concat creats a new arr and den adss ,while push adds it to the prev/porginal arr\r\n    //* we always want our arerays in state to be immutable as we dont want to update react state array directly with the kmnwoledge of react\r\n    const updateTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n      return{\r\n        items:updatedItems,\r\n        totalAmount:updateTotalAmount\r\n      }\r\n      \r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCarAction] = useReducer(cartdefaultCartState);\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCarAction({\r\n      type: \"ADD\",\r\n      item: item,\r\n    });\r\n  };\r\n\r\n  const removeItemToCartHandler = (id) => {\r\n    dispatchCarAction({\r\n      type: \"REMOVE\",\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemToCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB,CADyB,CAEzB;IACA;;IACA,MAAMC,iBAAiB,GACrBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;IAEE,OAAM;MACJX,KAAK,EAACM,YADF;MAEJL,WAAW,EAACQ;IAFR,CAAN;EAKH;;EACD,OAAOV,gBAAP;AACD,CAdD;;AAgBA,MAAMa,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiClB,UAAU,CAACmB,oBAAD,CAAjD;;EAEA,MAAMC,oBAAoB,GAAIT,IAAD,IAAU;IACrCO,iBAAiB,CAAC;MAChBV,IAAI,EAAE,KADU;MAEhBG,IAAI,EAAEA;IAFU,CAAD,CAAjB;EAID,CALD;;EAOA,MAAMU,uBAAuB,GAAIC,EAAD,IAAQ;IACtCJ,iBAAiB,CAAC;MAChBV,IAAI,EAAE,QADU;MAEhBc,EAAE,EAAEA;IAFY,CAAD,CAAjB;EAID,CALD;;EAOA,MAAMC,WAAW,GAAG;IAClBpB,KAAK,EAAEc,SAAS,CAACd,KADC;IAElBC,WAAW,EAAEa,SAAS,CAACb,WAFL;IAGlBoB,OAAO,EAAEJ,oBAHS;IAIlBK,UAAU,EAAEJ;EAJM,CAApB;EAMA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEE,WAA7B;IAAA,UACGP,KAAK,CAACU;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA5BD;;GAAMX,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}